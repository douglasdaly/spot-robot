[tool.poetry]
name = "squad"
version = "0.1.0"
description = "Application for controlling Small Quadruped (Squad) robot."
authors = ["Douglas Daly <me@douglasdaly.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.9,<3.10"

numpy = "^1.22.1"
pyserial = "^3.5"
python-dotenv = "^0.19.2"

[tool.poetry.dev-dependencies]
black = "^21.12b0"
coverage = "^6.2"
flake8 = "^4.0.1"
ipykernel = "^6.7.0"
isort = "^5.10.1"
mypy = "^0.931"
pre-commit = "^2.17.0"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-mypy = "^0.8.1"
pytest-sugar = "^0.9.4"
Sphinx = "^4.4.0"
sphinx-material = "^0.0.35"
pybullet = "^3.2.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79
atomic = true
include_trailing_comma = true
force_sort_within_sections = true
lines_after_imports = 2
use_parentheses = true
src_paths = ["src/squad", "tests"]
honor_noqa = true
skip_gitignore = true


[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true


[tool.coverage.run]
branch = true
relative_files = true
omit = [
    "**/__init__.py",
    "tests/*",
    "**/__main__.py",
]

[tool.coverage.report]
show_missing = true
ignore_errors = true
omit = [
    "**/__init__.py",
    "tests/*",
    "**/__main__.py",
]
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if TYPE_CHECKING:",
    "def __repr__",
    "@(abc\\.)?abstractmethod",
    "\\.\\.\\.$$",
    "if __name__ == \"__main__\":",
]
